
Coding Qustions:

Given an array arr[]. The task is to check whether it is a mountain array or not. A mountain array is an array of length at least 3 with elements strictly increasing from starting till an index i, and then strictly decreasing from index i to last index. More formally arr[0] < arr[1] < arr[i] >arr[i+1] > arr[i+2] > arr[N-1]. 

Examples


Input: arr[] = {4, 4, 3, 2, 1}
Output: false


Input: arr = {1, 2, 3, 4, 9, 8, 7, 6, 5}
Output: true




//The product of any prefix or suffix of nums is guaranteed to fit in a 32-bit integer.
//
//        You must write an algorithm that runs in O(n) time and without using the division operation.
//
//        Example 1:
//
//        Input: nums = [1,2,3,4] Output: [24,12,8,6]
//
//        Example 2:
//
//        Input: nums = [-1,1,0,-3,3] Output: [0,0,9,0,0]




//you are given a string s, which contains stars *.
//
//        In one operation, you can:
//
//        路 Choose a star in s.
//
//        路 Remove the closest non-star character to its left, as well as remove the star itself.
//
//        Return the string after all stars have been removed.
//
//        Note:
//
//        路 The input will be generated such that the operation is always possible.
//
//        路 It can be shown that the resulting string will always be unique.
//
//        Example 1:
//
//        Input: s = "leet**cod*e" Output: "lecoe" Explanation: Performing the removals from left to right: - The closest character to the 1st star is 't' in "leet**cod*e". s becomes "lee*cod*e". - The closest character to the 2nd star is 'e' in "lee*cod*e". s becomes "lecod*e". - The closest character to the 3rd star is 'd' in "lecod*e". s becomes "lecoe". There are no more stars, so we return "lecoe".
//
//        Example 2:
//
//        Input: s = "erase*****" Output: "" Explanation: The entire string is removed, so we return an empty string.
//
//        has context menu